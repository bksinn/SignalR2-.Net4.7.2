@{
    ViewBag.Title = "Chat";
}
<h2>JS Error Log</h2>
<div class="container">
    <button class="btn btn-primary" onclick="produceError()">Produce Custom Error</button>
    <br />
    <br />
    <button class="btn btn-primary" onclick="produceConsoleError()">Produce I_DONT_EXIST</button>
    <div id="discussion">

    </div>
    @*<div style="margin: 15px 0;" class="blah">
            <label>Send Message</label>
            <input type="text" id="message" />
            <input class="btn btn-primary" type="button" id="sendmessage" value="Send" />
            <input type="hidden" id="displayname" />
            <ul id="discussion2">
            </ul>
        </div>*@
</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>

        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion2').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };

            //Create a function that the hub can call back to log error
            chat.client.logErrorToPage = function (errorObject) {
                document.getElementById("discussion").innerHTML += `
                    <div class="error-log">
                        <p>Message: ${errorObject.Message}</p>
                        <p>Source: ${errorObject.Source}</p>
                        <p>LineNo: ${errorObject.LineNo}</p>
                        <p>ColNo: ${errorObject.ColNo}</p>
                        <p>Error: ${errorObject.Errpr}</p>
                    </div>
                `;
            }


            //// Get the user name and store it to prepend to messages.
            //$('#displayname').val(prompt('Enter your name:', ''));
            //// Set initial focus to message input box.
            //$('#message').focus();


            // Start the connection.
            $.connection.hub.start().done(function () {
                //$('#sendmessage').click(function () {
                //    // Call the Send method on the hub.
                //    chat.server.send($('#displayname').val(), $('#message').val());
                //    // Clear text box and reset focus for next comment.
                //    $('#message').val('').focus();
                //});

                window.onerror = function (message, source, lineno, colno, error) {
                    var errorObject = {
                        "Message": message,
                        "Source": source,
                        "LineNo": lineno,
                        "ColNo": colno,
                        "Error": error.message ? error.message : error
                    };

                    //chat.server.send("hello", "world");
                    chat.server.logError(errorObject).done(function () {
                        console.log('Invocation of send succeeded');
                    }).fail(function (error) {
                        console.log('Invocation of send failed. Error: ' + error);
                    });

                    return true; //Returning false lets default handler run as usual
                };
            });



        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        function produceError() {
            throw "Error Produced";
        }

        function produceConsoleError() {
            console.log(I_DONT_EXIST);
        }

        //Uncomment to force error for testing
        setTimeout(() => {
            throw "Sample Error";
        }, 2500);

        //setTimeout(() => {
        //    console.log(sdfsdfsdfsdfd);
        //}, 5000);
    </script>
}